# üèÜ Enterprise Compliance Configuration
# MEWAYZ Platform - Complete Rule Enforcement System

# =============================================================================
# COMPLIANCE RULES CONFIGURATION
# =============================================================================
rules:
  # Mock Data Rules (ZERO TOLERANCE)
  mock_data:
    enabled: true
    severity: critical
    patterns:
      - "mock.*data"
      - "hard.*coded"
      - "lorem ipsum"
      - "placeholder"
      - "fake.*data"
      - "dummy.*data"
      - "test.*data.*="
      - "Math\\.random\\(\\)"
      - "Date\\.now\\(\\)\\.toString\\(\\)"
    exclude_dirs:
      - "node_modules"
      - ".git"
      - "tests"
      - "__tests__"
    auto_fix: true
    fix_strategy: "comment_violation"

  # Authentication System Rules
  authentication:
    enabled: true
    severity: critical
    enforce_single_system: true
    required_file: "backend/middleware/enterpriseAuth.js"
    forbidden_patterns:
      - "multiple auth implementations"
      - "passport"
      - "session.*="
    exclude_files:
      - "enterpriseAuth.js"
    auto_fix: true
    fix_strategy: "consolidate_to_enterprise"

  # Database Integration Rules
  database:
    enabled: true
    severity: critical
    require_real_operations: true
    required_patterns:
      - "Model\\."
      - "\\.find\\("
      - "\\.create\\("
      - "\\.update"
      - "\\.delete"
    forbidden_patterns:
      - "res\\.json.*\\[.*\\]"
      - "mockData"
      - "hardcoded"
    auto_fix: true
    fix_strategy: "add_database_placeholder"

  # Real-time Features Rules
  realtime:
    enabled: true
    severity: high
    required_files:
      - "backend/middleware/websocket.js"
      - "backend/utils/notificationService.js"
    auto_fix: false
    fix_strategy: "manual_implementation_required"

  # Style Reference Rules
  style_reference:
    enabled: true
    severity: medium
    required_directory: "frontend/style-reference"
    forbidden_patterns:
      - "style.*="
      - "className.*custom"
      - "css.*="
    exclude_dirs:
      - "style-reference"
    auto_fix: true
    fix_strategy: "add_compliance_comment"

  # Security Rules
  security:
    enabled: true
    severity: critical
    forbidden_patterns:
      - "console\\.log.*password"
      - "console\\.log.*token"
      - "eval\\("
      - "dangerouslySetInnerHTML"
    npm_audit:
      enabled: true
      max_severity: "moderate"
    auto_fix: true
    fix_strategy: "remove_and_secure"

  # Performance Rules
  performance:
    enabled: true
    severity: medium
    database_indexes:
      required: true
      patterns:
        - "index.*true"
        - "createIndex"
    query_optimization:
      enabled: true
      forbidden_patterns:
        - "find\\(\\)\\.exec\\(\\)"
    auto_fix: true
    fix_strategy: "optimize_queries"

# =============================================================================
# QUALITY GATES
# =============================================================================
quality_gates:
  compliance_threshold: 100  # Must be 100% compliant
  security_threshold: 0      # Zero security vulnerabilities
  performance_threshold: 90  # 90% performance score

  # Gate conditions
  block_on:
    - critical_violations
    - security_vulnerabilities
    - mock_data_found
    - multiple_auth_systems

  # Warning conditions
  warn_on:
    - style_violations
    - performance_issues
    - missing_indexes

# =============================================================================
# AUTOMATED FIXES CONFIGURATION
# =============================================================================
auto_fix:
  enabled: true
  
  # Fix strategies
  strategies:
    comment_violation:
      action: "replace_with_comment"
      comment_template: "// COMPLIANCE: {violation_type} violation removed - {fix_instruction}"
    
    add_database_placeholder:
      action: "append_comment"
      comment_template: "// COMPLIANCE: Add real database operations here"
    
    remove_and_secure:
      action: "replace_pattern"
      replacement_template: "// SECURITY: Removed insecure {pattern_type}"
    
    optimize_queries:
      action: "modify_pattern"
      modifications:
        - from: "\\.find\\(\\)\\.exec\\(\\)"
          to: ".find().limit(100).exec() // PERFORMANCE: Added pagination"
    
    add_compliance_comment:
      action: "append_comment"
      comment_template: "// STYLE: Review custom styling - ensure compliance with style-reference"

  # Branch management
  branch_naming: "bugbot/auto-fix-{timestamp}"
  commit_message_template: |
    ü§ñ BugBot: Auto-fix {violation_count} compliance violations
    
    - {violations_summary}
    
    Generated by Enterprise Compliance System
  
  # Pull request configuration
  pull_request:
    auto_create: true
    title_template: "ü§ñ BugBot: Auto-fix {violation_count} compliance violations"
    labels:
      - "bugbot"
      - "compliance"
      - "auto-fix"
    assignees:
      - "@actor"
    draft: false

# =============================================================================
# MONITORING AND REPORTING
# =============================================================================
monitoring:
  enabled: true
  
  # Compliance tracking
  tracking:
    store_history: true
    retention_days: 90
    metrics:
      - compliance_score
      - violation_count
      - fix_success_rate
      - time_to_resolution

  # Notifications
  notifications:
    enabled: true
    channels:
      slack:
        enabled: false
        webhook_url: "${SLACK_WEBHOOK_URL}"
      email:
        enabled: false
        recipients: ["compliance@mewayz.com"]
      github:
        enabled: true
        create_issues: true
        issue_labels: ["compliance", "urgent"]

  # Reporting
  reports:
    daily_summary: true
    weekly_detailed: true
    monthly_trends: true
    
    export_formats:
      - markdown
      - json
      - csv

# =============================================================================
# ENTERPRISE STANDARDS
# =============================================================================
enterprise_standards:
  # Code quality standards
  code_quality:
    eslint:
      enabled: true
      config: "enterprise"
      auto_fix: true
    
    prettier:
      enabled: true
      auto_format: true
    
    typescript:
      strict_mode: true
      no_any: true

  # Documentation standards
  documentation:
    required_files:
      - "README.md"
      - "API.md"
      - "SECURITY.md"
    
    code_comments:
      minimum_coverage: 80
      required_for:
        - public_methods
        - complex_algorithms
        - security_functions

  # Security standards
  security_standards:
    jwt:
      algorithm: "HS256"
      expiry: "24h"
      refresh_token: true
    
    passwords:
      hashing_algorithm: "bcrypt"
      min_rounds: 12
    
    rate_limiting:
      enabled: true
      default_window: "15m"
      default_max: 100

  # Performance standards
  performance_standards:
    api_response_time: "200ms"
    database_query_time: "100ms"
    page_load_time: "3s"
    
    optimization:
      database_indexes: required
      query_pagination: required
      caching_strategy: recommended

# =============================================================================
# PLAN-SPECIFIC COMPLIANCE
# =============================================================================
plan_compliance:
  free_plan:
    features:
      - ecommerce
      - social_media_management
      - course_creation
      - crm_system
    restrictions:
      - mewayz_branding_required
      - standard_support_only
    compliance_level: "standard"

  pro_plan:
    features:
      - all_free_features
      - custom_branding
      - premium_support
      - enhanced_notifications
    restrictions: []
    compliance_level: "enhanced"

  enterprise_plan:
    features:
      - all_pro_features
      - white_label_platform
      - advanced_analytics
      - api_access
      - enhanced_security
    restrictions: []
    compliance_level: "maximum"
    additional_requirements:
      - audit_logging
      - sla_guarantees
      - dedicated_support
      - compliance_reporting

# =============================================================================
# INTEGRATION SETTINGS
# =============================================================================
integrations:
  # GitHub integration
  github:
    actions:
      enabled: true
      workflows:
        - compliance-check
        - bugbot-auto-fix
        - security-scan
    
    branch_protection:
      enabled: true
      require_status_checks: true
      required_checks:
        - "compliance-check"
        - "security-scan"
    
    code_scanning:
      enabled: true
      tools:
        - codeql
        - eslint
        - security-audit

  # Development tools
  development:
    pre_commit_hooks:
      enabled: true
      hooks:
        - compliance-check
        - security-scan
        - style-check
    
    ide_plugins:
      vscode:
        extensions:
          - eslint
          - prettier
          - security-scanner
      
    ci_cd:
      build_failure_on_violations: true
      deployment_gate: true

# =============================================================================
# EMERGENCY PROCEDURES
# =============================================================================
emergency:
  # Critical violation response
  critical_violations:
    immediate_actions:
      - block_deployment
      - create_incident
      - notify_team
      - auto_remediate
    
    escalation:
      level_1: "development_team"
      level_2: "security_team"
      level_3: "management"
    
    response_time:
      acknowledge: "15m"
      initial_response: "1h"
      resolution: "4h"

  # Compliance bypass (emergency only)
  bypass:
    enabled: false
    requires_approval: true
    approvers:
      - "security_lead"
      - "technical_director"
    
    conditions:
      - critical_production_issue
      - security_patch_deployment
      - emergency_maintenance

# =============================================================================
# VALIDATION SETTINGS
# =============================================================================
validation:
  # File validation
  file_types:
    javascript: [".js", ".mjs"]
    typescript: [".ts", ".tsx"]
    json: [".json"]
    yaml: [".yml", ".yaml"]
    markdown: [".md"]

  # Exclusion patterns
  exclude:
    directories:
      - "node_modules"
      - ".git"
      - "dist"
      - "build"
      - "coverage"
    
    files:
      - "*.min.js"
      - "*.bundle.js"
      - "package-lock.json"
    
    patterns:
      - "test.*"
      - "spec.*"
      - "*.test.*"
      - "*.spec.*"

# =============================================================================
# SUCCESS METRICS
# =============================================================================
success_metrics:
  # Compliance KPIs
  kpis:
    compliance_score_target: 100
    violation_reduction_rate: 95
    auto_fix_success_rate: 85
    time_to_resolution_target: "1h"

  # Quality indicators
  quality_indicators:
    zero_mock_data: true
    single_auth_system: true
    real_database_operations: true
    enterprise_security: true
    production_readiness: true

# =============================================================================
# VERSION AND MAINTENANCE
# =============================================================================
metadata:
  version: "1.0.0"
  last_updated: "2025-01-01"
  maintainer: "Enterprise Compliance Team"
  
  # Configuration validation
  schema_version: "2025.1"
  validation_rules: "enterprise-v1"
  
  # Update schedule
  review_frequency: "monthly"
  update_frequency: "quarterly"
  major_revision_frequency: "annually" 